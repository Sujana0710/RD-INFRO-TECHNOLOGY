import pandas as pd

# Loading the dataset
df = pd.read_csv("advertising.csv")


# Exploring the data
df.head()
print(df.info())
print(df.isnull().sum())
print(df.describe())
print(df.corr())


# Data Visualization
import seaborn as sns
import matplotlib.pyplot as plt

sns.pairplot(df)
plt.show()


plt.figure(figsize=(8,6))
sns.scatterplot(x=df["TV"], y=df["Sales"])
plt.xlabel("TV Advertising Spend")
plt.ylabel("Sales")
plt.title("TV Ad Spend vs. Sales")
plt.show()


# Preprocessing
X = df[["TV", "Radio", "Newspaper"]]  # Independent variables (advertising spend)
y = df["Sales"]  # Dependent variable (sales)


# Splitting data
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# Training model
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = mse ** 0.5
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")
print(f"RÂ² Score: {r2:.2f}")


# Prediction on new data
new_data = pd.DataFrame({"TV": [200], "Radio": [30], "Newspaper": [20]})
predicted_sales = model.predict(new_data)
print(f"Predicted Sales: {predicted_sales[0]:.2f}")





