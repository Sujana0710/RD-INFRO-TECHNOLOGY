import pandas as pd

# Loading the dataset
df = pd.read_csv("IMDb Top Indian Movies.csv")

# Displaying the first few rows
df.head()


#Exploring the data
print(df.info())
print(df.isnull().sum())
print(df.describe())


#Data Preprocessing
# Filling missing values
df.fillna(df.median(numeric_only=True), inplace=True)
df.fillna(df.mode().iloc[0], inplace=True)



#Converting Categorical Variables to Numerical
from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
categorical_columns = ["Genre", "Director", "Actors"]

for col in categorical_columns:
    df[col] = label_encoder.fit_transform(df[col])


#Feature Selection
X = df.drop(columns=["Movie Name", "IMDb Rating"])  
y = df["IMDb Rating"]  


#Splitting the Data
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)




from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Training model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Making predictions
y_pred = model.predict(X_test)

# Evaluating model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print(f"Mean Absolute Error: {mae:.2f}")
print(f"Mean Squared Error: {mse:.2f}")



#Predicting Ratings for New Movies

new_movie = pd.DataFrame({
    "Genre": [label_encoder.transform(["Action"])], 
    "Director": [label_encoder.transform(["Christopher Nolan"])], 
    "Actors": [label_encoder.transform(["Shah Rukh Khan"])], 
    "Year": [2024], 
    "Votes": [50000],
    "Runtime": [150]
})

predicted_rating = model.predict(new_movie)
print(f"Predicted IMDb Rating: {predicted_rating[0]:.2f}")







