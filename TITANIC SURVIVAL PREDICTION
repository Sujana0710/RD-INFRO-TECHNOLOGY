import pandas as pd

# Load the dataset
train_df = pd.read_csv("train.csv")
test_df = pd.read_csv("test.csv")

# Display basic info
train_df.head()


#Exploring the data
print(train_df.info())
print(train_df.describe())
print(train_df.isnull().sum())  


#Data Preprocessing
# Filling missing values
train_df["Age"].fillna(train_df["Age"].median(), inplace=True)
train_df["Embarked"].fillna(train_df["Embarked"].mode()[0], inplace=True)

# Converting categorical data to numerical
train_df["Sex"] = train_df["Sex"].map({"male": 0, "female": 1})
train_df["Embarked"] = train_df["Embarked"].map({"C": 0, "Q": 1, "S": 2})

# Dropping unnecessary columns
train_df.drop(["PassengerId", "Name", "Ticket", "Cabin"], axis=1, inplace=True)


#Splitting the data
from sklearn.model_selection import train_test_split

X = train_df.drop("Survived", axis=1)
y = train_df["Survived"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)



#Training the model
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Making predictions
y_pred = model.predict(X_test)

# Evaluating the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy:.2f}")


#Predictions on Test data
# Preprocess test data similar to train data
test_df["Age"].fillna(test_df["Age"].median(), inplace=True)
test_df["Embarked"].fillna(test_df["Embarked"].mode()[0], inplace=True)
test_df["Fare"].fillna(test_df["Fare"].median(), inplace=True)

test_df["Sex"] = test_df["Sex"].map({"male": 0, "female": 1})
test_df["Embarked"] = test_df["Embarked"].map({"C": 0, "Q": 1, "S": 2})

test_df.drop(["PassengerId", "Name", "Ticket", "Cabin"], axis=1, inplace=True)

# Make predictions
test_predictions = model.predict(test_df)



#Outcome 
submission = pd.DataFrame({"PassengerId": test_df["PassengerId"], "Survived": test_predictions})
submission.to_csv("submission.csv", index=False)

